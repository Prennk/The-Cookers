on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
permissions:
  contents: read
name: ðŸš€ Deploy website on push
jobs:
  # Continous integration
  tests:
    runs-on: ubuntu-latest

    name: Continous integration

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
          
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath

      - name: Install Composer dependencies
        run: composer install --prefer-dist

      - name: Copy environment file
        run: |
          cp .env.example .env
          echo "${{secrets.DOT_ENV_TEST}}"
          
      # - name: Generate app key
      #   run: php artisan key:generate
        
      #- name: Copy environment file
      #  run: |
      #    echo "MAIL_MAILER=${{secrets.MAIL_MAILER}}">>.env
      #    echo "MAIL_HOST=${{secrets.MAIL_HOST}}">>.env
      #    echo "MAIL_PORT=${{secrets.MAIL_PORT}}">>.env
      #   echo "MAIL_USERNAME=${{secrets.MAIL_USERNAME}}">>.env
      #   echo "MAIL_PASSWORD=${{secrets.MAIL_PASSWORD}}">>.env
      #   echo "MAIL_ENCRYPTION=${{secrets.MAIL_ENCRYPTION}}">>.env         
      #   echo "MAIL_FROM_ADDRESS=${{secrets.MAIL_FROM_ADDRESS}}">>.env  
        
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: vendor/bin/phpunit
  web-deploy:
    needs: tests
    runs-on: ubuntu-latest
    name: ðŸš€ Deploy website

    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v2.3.2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extension-csv: mbstring, bcmath, mysqli

      # Continous deployment/development
      # - name: Restore composer cache
      #  uses: actions/cache@v2
      #  with:
      #   path: vendor
      #   key: ${{ runner.os }}-php-${{ hashFiles('composer.lock') }}
      #    restore-keys: |
      #      ${{ runner.os }}-php-
            
      #- name: Install Composer dependencies
      #  run: composer install --no-dev --prefer-dist
        
      - name: Copy environment file
        run: |
          cp .env.example .env
          echo "${{secrets.DOT_ENV_TEST}}"
              
              
      - name: Generate app key
        run: php artisan key:generate

      - name: Sync public folder
        run: rsync -av --exclude='index.php' ./public/ ./

      #- name: Copy environment file
      #  run: |
      #    echo "MAIL_MAILER=${{secrets.MAIL_MAILER}}">>.env
      #    echo "MAIL_HOST=${{secrets.MAIL_HOST}}">>.env
      #    echo "MAIL_PORT=${{secrets.MAIL_PORT}}">>.env
      #    echo "MAIL_USERNAME=${{secrets.MAIL_USERNAME}}">>.env
      #    echo "MAIL_PASSWORD=${{secrets.MAIL_PASSWORD}}">>.env
      #    echo "MAIL_ENCRYPTION=${{secrets.MAIL_ENCRYPTION}}">>.env         
      #    echo "MAIL_FROM_ADDRESS=${{secrets.MAIL_FROM_ADDRESS}}">>.env  
      #    echo "DB_DATABASE=${{secrets.DB_DATABASE}}">>.env
      #    echo "DB_USERNAME=${{secrets.DB_USERNAME}}">>.env
      #    echo "DB_PASSWORD=${{secrets.DB_PASSWORD}}">>.env

      - name: ðŸ“‚ Sync files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
              server: ${{ secrets.FTP_SERVER }}
              username: ${{ secrets.FTP_USER }}
              password: ${{ secrets.FTP_PASS }}
              protocol: ftps #menggunnakan ftps agar lebih aman
              port: ${{ secrets.FTP_PORT }}
              exclude: .git*
              server-dir: /public_html/
